
$XS:    480px;   
$SM:    576px;  
$MD:    768px;  
$LG:    992px; 
$XL:   1200px;

$mobile: 46.1875em;
$tablet: 46.25em;
$desktop: 64em;
     

// media queries

@mixin responsive($canvas) {
  @if $canvas == XS {
   @media only screen and (max-width: $XS) { @content; } 
  }
  @else if $canvas == SM {
   @media only screen and (max-width: $SM) { @content; } 
  }
  @else if $canvas == MD {
   @media only screen and (max-width: $MD) { @content; } 
  }
  @else if $canvas == LG {
    @media only screen and (max-width: $LG) { @content; } 
   }
  @else if $canvas == XL {
   @media only screen and (max-width: $XL) { @content; } 
  }
  @else if $canvas == mobile {
    @media only screen and (max-width: $mobile) { @content; } 
   }
   @else if $canvas == tablet {
    @media only screen and (min-width: $tablet) { @content; } 
   }
   @else if $canvas == desktop {
    @media only screen and (min-width: $desktop) { @content; } 
   }
  
}


@mixin addTriagle($color, $rotage_degree){
  content: '';
  position: absolute;
  width: 0;
  height: 0;
  border-top: 9px solid $color;
  border-right: 9px solid transparent;
  border-left: 9px solid transparent;
  transform: rotate($rotage_degree);
}


@mixin iconSetup($width){
  width: $width;
  height: $width;
  line-height: $width;
};

@mixin position($position, $args) {
  @each $o in top right bottom left {
    $i: index($args, $o);
    @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number {
      #{$o}: nth($args, $i + 1);
    }
  }
  position: $position;
}

// Positioning helpers
@mixin absolute($args: '') {
  @include position(absolute, $args);
}

@mixin fixed($args: '') {
  @include position(fixed, $args);
}

@mixin relative($args: '') {
  @include position(relative, $args);
}

@mixin font-size($size, $base: 16) {
  font-size: $size; // fallback for old browsers
  font-size: ($size / $base) * 1rem;
}

@mixin screen($size) {
  $desktop: "(min-width: 1024px)";
  $tablet: "(min-width: 768px) and (max-width: 1023px)";
  $mobile: "(max-width: 767px)";
  @if $size == desktop {
    @media only screen and #{$desktop} {
      @content;
    }
  }
  @else if $size == tablet {
    @media only screen and #{$tablet} {
      @content;
    }
  }
  @else if $size == mobile {
    @media only screen and #{$mobile} {
      @content;
    }
  }
  @else {
    @media only screen and #{$size} {
      @content;
    }
  }
}

@mixin gradient($start-color, $end-color, $orientation) {
  background: $start-color;
  @if $orientation == 'vertical' {
    background: -webkit-linear-gradient(top, $start-color, $end-color);
    background: linear-gradient(to bottom, $start-color, $end-color);
  } @else if $orientation == 'horizontal' {
    background: -webkit-linear-gradient(left, $start-color, $end-color);
    background: linear-gradient(to right, $start-color, $end-color);
  } @else {
    background: -webkit-radial-gradient(center, ellipse cover, $start-color, $end-color);
    background: radial-gradient(ellipse at center, $start-color, $end-color);
  }
}

@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {
  @font-face {
    font-family: quote($font-name);
    src: url($file-name + '.eot');
    src: url($file-name + '.eot?#iefix')  format('embedded-opentype'),
    url($file-name + '.woff') format('woff'),
    url($file-name + '.ttf')  format('truetype'),
    url($file-name + '.svg##{$font-name}')  format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin size($width, $height : $width) {
  width: $width;
  height: $height;
}

@mixin flex($align: flex-start, $justify: flex-start, $wrap: nowrap, $dir: row) {
	display: flex;
	align-items: $align;
	justify-content: $justify;
	flex-wrap: $wrap;
	flex-direction: $dir;
}